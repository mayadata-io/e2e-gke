#!/bin/bash
set -x

source ~/.profile

job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
releaseTag=$RELEASE_TAG

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."   
${utils_path}/setup_dependencies litmus-test

bash script/utils/e2e-cr jobname:percona-cstor jobphase:Waiting
bash script/utils/e2e-cr jobname:percona-cstor jobphase:Running init_time:"$current_time" job_id:"$job_id" pipeline_id:"$pipeline_id" openebs_version:"$releaseTag"

## Deploying percona application...

run_id="cstor";test_name=$(bash script/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name

git clone https://github.com/mayadata-io/litmus.git
cd litmus
echo "Running the litmus test for percona Deployment..."
cp apps/percona/deployers/run_litmus_test.yml percona_cstor.yml

sed -i -e 's/app: percona-deployment/app: percona-deploy-cstor/g' \
-e 's/value: openebs-standard/value: openebs-cstor-disk/g' \
-e 's/value: app-percona-ns/value: percona-cstor-ns/g' percona_cstor.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_cstor.yml

cat percona_cstor.yml

bash ../script/utils/litmus_job_runner label='app:percona-deploy-cstor' job=percona_cstor.yml
cd ..

bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:percona-cstor $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

##DATA-PERSISTENCE-load

run_id="percona-cstor-load";test_name=$(bash script/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus experiment to check data-persistence for percona Application..."
cp experiments/functional/data-persistence/run_litmus_test.yml percona_cstor_load.yml

sed -i -e 's/generateName: data-persistence-litmus-/generateName: data-persistence-percona-cstor-/g' \
-e 's/name: data-persistence/name: percona-cstor-cm/g' \
-e 's/name: litmus-data-persistence/name: percona-cstor-load/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-cstor-ns/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''name=percona'\''/}' \
-e '/name: STATUS/{n;s/.*/            value: LOAD/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' percona_cstor_load.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_cstor_load.yml

## Insert the set of variables for percona data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    dbuser: root \
    dbpassword: k8sDem0 \
    dbname: db_percona_cstor
' percona_cstor_load.yml

cat percona_cstor_load.yml

bash ../script/utils/litmus_job_runner label='name:percona-cstor-load' job=percona_cstor_load.yml
cd ..

bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:percona-cstor $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

##DATA-PERSISTENCE-verify

run_id="percona-cstor-verify";test_name=$(bash script/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus experiment to check data-persistence for percona Application..."
cp experiments/functional/data-persistence/run_litmus_test.yml percona_cstor_verify.yml

sed -i -e 's/generateName: data-persistence-litmus-/generateName: data-persistence-percona-cstor-/g' \
-e 's/name: data-persistence/name: percona-cstor-cm/g' \
-e 's/name: litmus-data-persistence/name: percona-cstor-verify/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-cstor-ns/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''name=percona'\''/}' \
-e '/name: STATUS/{n;s/.*/            value: VERIFY/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' percona_cstor_verify.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_cstor_verify.yml

## Insert the set of variables for percona data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    dbuser: root \
    dbpassword: k8sDem0 \
    dbname: db_percona_cstor
' percona_cstor_verify.yml

cat percona_cstor_verify.yml

bash ../script/utils/litmus_job_runner label='name:percona-cstor-verify' job=percona_cstor_verify.yml
cd ..

bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:percona-cstor $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

if [ "$?" != "0" ]; then
exit 1;
fi

##DATA-PERSISTENCE-delete

run_id="percona-cstor-delete";test_name=$(bash script/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus experiment to check data-persistence for percona Application..."
cp experiments/functional/data-persistence/run_litmus_test.yml percona_cstor_delete.yml

sed -i -e 's/generateName: data-persistence-litmus-/generateName: data-persistence-percona-cstor-/g' \
-e 's/name: data-persistence/name: percona-cstor-cm/g' \
-e 's/name: litmus-data-persistence/name: percona-cstor-delete/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-cstor-ns/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''name=percona'\''/}' \
-e '/name: STATUS/{n;s/.*/            value: DELETE/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' percona_cstor_delete.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_cstor_delete.yml

## Insert the set of variables for percona data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    dbuser: root \
    dbpassword: k8sDem0 \
    dbname: db_percona_cstor
' percona_cstor_delete.yml

cat percona_cstor_delete.yml

bash ../script/utils/litmus_job_runner label='name:percona-cstor-delete' job=percona_cstor_delete.yml
cd ..

bash script/utils/dump_cluster_state;
bash script/utils/event_updater jobname:percona-cstor $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash script/utils/e2e-cr jobname:percona-cstor jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash script/utils/e2e-cr jobname:percona-cstor jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass